// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timescale

import (
	"context"
	"reflect"

	"github.com/itoam/pulumi-timescale/sdk/go/timescale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServiceTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
}

// ServiceTimeoutsInput is an input type that accepts ServiceTimeoutsArgs and ServiceTimeoutsOutput values.
// You can construct a concrete instance of `ServiceTimeoutsInput` via:
//
//	ServiceTimeoutsArgs{...}
type ServiceTimeoutsInput interface {
	pulumi.Input

	ToServiceTimeoutsOutput() ServiceTimeoutsOutput
	ToServiceTimeoutsOutputWithContext(context.Context) ServiceTimeoutsOutput
}

type ServiceTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
}

func (ServiceTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTimeouts)(nil)).Elem()
}

func (i ServiceTimeoutsArgs) ToServiceTimeoutsOutput() ServiceTimeoutsOutput {
	return i.ToServiceTimeoutsOutputWithContext(context.Background())
}

func (i ServiceTimeoutsArgs) ToServiceTimeoutsOutputWithContext(ctx context.Context) ServiceTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTimeoutsOutput)
}

func (i ServiceTimeoutsArgs) ToServiceTimeoutsPtrOutput() ServiceTimeoutsPtrOutput {
	return i.ToServiceTimeoutsPtrOutputWithContext(context.Background())
}

func (i ServiceTimeoutsArgs) ToServiceTimeoutsPtrOutputWithContext(ctx context.Context) ServiceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTimeoutsOutput).ToServiceTimeoutsPtrOutputWithContext(ctx)
}

// ServiceTimeoutsPtrInput is an input type that accepts ServiceTimeoutsArgs, ServiceTimeoutsPtr and ServiceTimeoutsPtrOutput values.
// You can construct a concrete instance of `ServiceTimeoutsPtrInput` via:
//
//	        ServiceTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ServiceTimeoutsPtrInput interface {
	pulumi.Input

	ToServiceTimeoutsPtrOutput() ServiceTimeoutsPtrOutput
	ToServiceTimeoutsPtrOutputWithContext(context.Context) ServiceTimeoutsPtrOutput
}

type serviceTimeoutsPtrType ServiceTimeoutsArgs

func ServiceTimeoutsPtr(v *ServiceTimeoutsArgs) ServiceTimeoutsPtrInput {
	return (*serviceTimeoutsPtrType)(v)
}

func (*serviceTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTimeouts)(nil)).Elem()
}

func (i *serviceTimeoutsPtrType) ToServiceTimeoutsPtrOutput() ServiceTimeoutsPtrOutput {
	return i.ToServiceTimeoutsPtrOutputWithContext(context.Background())
}

func (i *serviceTimeoutsPtrType) ToServiceTimeoutsPtrOutputWithContext(ctx context.Context) ServiceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTimeoutsPtrOutput)
}

type ServiceTimeoutsOutput struct{ *pulumi.OutputState }

func (ServiceTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTimeouts)(nil)).Elem()
}

func (o ServiceTimeoutsOutput) ToServiceTimeoutsOutput() ServiceTimeoutsOutput {
	return o
}

func (o ServiceTimeoutsOutput) ToServiceTimeoutsOutputWithContext(ctx context.Context) ServiceTimeoutsOutput {
	return o
}

func (o ServiceTimeoutsOutput) ToServiceTimeoutsPtrOutput() ServiceTimeoutsPtrOutput {
	return o.ToServiceTimeoutsPtrOutputWithContext(context.Background())
}

func (o ServiceTimeoutsOutput) ToServiceTimeoutsPtrOutputWithContext(ctx context.Context) ServiceTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceTimeouts) *ServiceTimeouts {
		return &v
	}).(ServiceTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ServiceTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

type ServiceTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ServiceTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTimeouts)(nil)).Elem()
}

func (o ServiceTimeoutsPtrOutput) ToServiceTimeoutsPtrOutput() ServiceTimeoutsPtrOutput {
	return o
}

func (o ServiceTimeoutsPtrOutput) ToServiceTimeoutsPtrOutputWithContext(ctx context.Context) ServiceTimeoutsPtrOutput {
	return o
}

func (o ServiceTimeoutsPtrOutput) Elem() ServiceTimeoutsOutput {
	return o.ApplyT(func(v *ServiceTimeouts) ServiceTimeouts {
		if v != nil {
			return *v
		}
		var ret ServiceTimeouts
		return ret
	}).(ServiceTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ServiceTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

type VpcsTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
}

// VpcsTimeoutsInput is an input type that accepts VpcsTimeoutsArgs and VpcsTimeoutsOutput values.
// You can construct a concrete instance of `VpcsTimeoutsInput` via:
//
//	VpcsTimeoutsArgs{...}
type VpcsTimeoutsInput interface {
	pulumi.Input

	ToVpcsTimeoutsOutput() VpcsTimeoutsOutput
	ToVpcsTimeoutsOutputWithContext(context.Context) VpcsTimeoutsOutput
}

type VpcsTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
}

func (VpcsTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsTimeouts)(nil)).Elem()
}

func (i VpcsTimeoutsArgs) ToVpcsTimeoutsOutput() VpcsTimeoutsOutput {
	return i.ToVpcsTimeoutsOutputWithContext(context.Background())
}

func (i VpcsTimeoutsArgs) ToVpcsTimeoutsOutputWithContext(ctx context.Context) VpcsTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTimeoutsOutput)
}

func (i VpcsTimeoutsArgs) ToVpcsTimeoutsPtrOutput() VpcsTimeoutsPtrOutput {
	return i.ToVpcsTimeoutsPtrOutputWithContext(context.Background())
}

func (i VpcsTimeoutsArgs) ToVpcsTimeoutsPtrOutputWithContext(ctx context.Context) VpcsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTimeoutsOutput).ToVpcsTimeoutsPtrOutputWithContext(ctx)
}

// VpcsTimeoutsPtrInput is an input type that accepts VpcsTimeoutsArgs, VpcsTimeoutsPtr and VpcsTimeoutsPtrOutput values.
// You can construct a concrete instance of `VpcsTimeoutsPtrInput` via:
//
//	        VpcsTimeoutsArgs{...}
//
//	or:
//
//	        nil
type VpcsTimeoutsPtrInput interface {
	pulumi.Input

	ToVpcsTimeoutsPtrOutput() VpcsTimeoutsPtrOutput
	ToVpcsTimeoutsPtrOutputWithContext(context.Context) VpcsTimeoutsPtrOutput
}

type vpcsTimeoutsPtrType VpcsTimeoutsArgs

func VpcsTimeoutsPtr(v *VpcsTimeoutsArgs) VpcsTimeoutsPtrInput {
	return (*vpcsTimeoutsPtrType)(v)
}

func (*vpcsTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcsTimeouts)(nil)).Elem()
}

func (i *vpcsTimeoutsPtrType) ToVpcsTimeoutsPtrOutput() VpcsTimeoutsPtrOutput {
	return i.ToVpcsTimeoutsPtrOutputWithContext(context.Background())
}

func (i *vpcsTimeoutsPtrType) ToVpcsTimeoutsPtrOutputWithContext(ctx context.Context) VpcsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTimeoutsPtrOutput)
}

type VpcsTimeoutsOutput struct{ *pulumi.OutputState }

func (VpcsTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsTimeouts)(nil)).Elem()
}

func (o VpcsTimeoutsOutput) ToVpcsTimeoutsOutput() VpcsTimeoutsOutput {
	return o
}

func (o VpcsTimeoutsOutput) ToVpcsTimeoutsOutputWithContext(ctx context.Context) VpcsTimeoutsOutput {
	return o
}

func (o VpcsTimeoutsOutput) ToVpcsTimeoutsPtrOutput() VpcsTimeoutsPtrOutput {
	return o.ToVpcsTimeoutsPtrOutputWithContext(context.Background())
}

func (o VpcsTimeoutsOutput) ToVpcsTimeoutsPtrOutputWithContext(ctx context.Context) VpcsTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcsTimeouts) *VpcsTimeouts {
		return &v
	}).(VpcsTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VpcsTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcsTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

type VpcsTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (VpcsTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcsTimeouts)(nil)).Elem()
}

func (o VpcsTimeoutsPtrOutput) ToVpcsTimeoutsPtrOutput() VpcsTimeoutsPtrOutput {
	return o
}

func (o VpcsTimeoutsPtrOutput) ToVpcsTimeoutsPtrOutputWithContext(ctx context.Context) VpcsTimeoutsPtrOutput {
	return o
}

func (o VpcsTimeoutsPtrOutput) Elem() VpcsTimeoutsOutput {
	return o.ApplyT(func(v *VpcsTimeouts) VpcsTimeouts {
		if v != nil {
			return *v
		}
		var ret VpcsTimeouts
		return ret
	}).(VpcsTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o VpcsTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

type GetProductsProduct struct {
	Description string                   `pulumi:"description"`
	Id          string                   `pulumi:"id"`
	Name        string                   `pulumi:"name"`
	Plans       []GetProductsProductPlan `pulumi:"plans"`
}

// GetProductsProductInput is an input type that accepts GetProductsProductArgs and GetProductsProductOutput values.
// You can construct a concrete instance of `GetProductsProductInput` via:
//
//	GetProductsProductArgs{...}
type GetProductsProductInput interface {
	pulumi.Input

	ToGetProductsProductOutput() GetProductsProductOutput
	ToGetProductsProductOutputWithContext(context.Context) GetProductsProductOutput
}

type GetProductsProductArgs struct {
	Description pulumi.StringInput               `pulumi:"description"`
	Id          pulumi.StringInput               `pulumi:"id"`
	Name        pulumi.StringInput               `pulumi:"name"`
	Plans       GetProductsProductPlanArrayInput `pulumi:"plans"`
}

func (GetProductsProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProduct)(nil)).Elem()
}

func (i GetProductsProductArgs) ToGetProductsProductOutput() GetProductsProductOutput {
	return i.ToGetProductsProductOutputWithContext(context.Background())
}

func (i GetProductsProductArgs) ToGetProductsProductOutputWithContext(ctx context.Context) GetProductsProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductOutput)
}

// GetProductsProductArrayInput is an input type that accepts GetProductsProductArray and GetProductsProductArrayOutput values.
// You can construct a concrete instance of `GetProductsProductArrayInput` via:
//
//	GetProductsProductArray{ GetProductsProductArgs{...} }
type GetProductsProductArrayInput interface {
	pulumi.Input

	ToGetProductsProductArrayOutput() GetProductsProductArrayOutput
	ToGetProductsProductArrayOutputWithContext(context.Context) GetProductsProductArrayOutput
}

type GetProductsProductArray []GetProductsProductInput

func (GetProductsProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProduct)(nil)).Elem()
}

func (i GetProductsProductArray) ToGetProductsProductArrayOutput() GetProductsProductArrayOutput {
	return i.ToGetProductsProductArrayOutputWithContext(context.Background())
}

func (i GetProductsProductArray) ToGetProductsProductArrayOutputWithContext(ctx context.Context) GetProductsProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductArrayOutput)
}

type GetProductsProductOutput struct{ *pulumi.OutputState }

func (GetProductsProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProduct)(nil)).Elem()
}

func (o GetProductsProductOutput) ToGetProductsProductOutput() GetProductsProductOutput {
	return o
}

func (o GetProductsProductOutput) ToGetProductsProductOutputWithContext(ctx context.Context) GetProductsProductOutput {
	return o
}

func (o GetProductsProductOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProductsProductOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProductsProductOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProductsProductOutput) Plans() GetProductsProductPlanArrayOutput {
	return o.ApplyT(func(v GetProductsProduct) []GetProductsProductPlan { return v.Plans }).(GetProductsProductPlanArrayOutput)
}

type GetProductsProductArrayOutput struct{ *pulumi.OutputState }

func (GetProductsProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProduct)(nil)).Elem()
}

func (o GetProductsProductArrayOutput) ToGetProductsProductArrayOutput() GetProductsProductArrayOutput {
	return o
}

func (o GetProductsProductArrayOutput) ToGetProductsProductArrayOutputWithContext(ctx context.Context) GetProductsProductArrayOutput {
	return o
}

func (o GetProductsProductArrayOutput) Index(i pulumi.IntInput) GetProductsProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductsProduct {
		return vs[0].([]GetProductsProduct)[vs[1].(int)]
	}).(GetProductsProductOutput)
}

type GetProductsProductPlan struct {
	Id         string  `pulumi:"id"`
	MemoryGb   int     `pulumi:"memoryGb"`
	MilliCpu   int     `pulumi:"milliCpu"`
	Price      float64 `pulumi:"price"`
	ProductId  string  `pulumi:"productId"`
	RegionCode string  `pulumi:"regionCode"`
}

// GetProductsProductPlanInput is an input type that accepts GetProductsProductPlanArgs and GetProductsProductPlanOutput values.
// You can construct a concrete instance of `GetProductsProductPlanInput` via:
//
//	GetProductsProductPlanArgs{...}
type GetProductsProductPlanInput interface {
	pulumi.Input

	ToGetProductsProductPlanOutput() GetProductsProductPlanOutput
	ToGetProductsProductPlanOutputWithContext(context.Context) GetProductsProductPlanOutput
}

type GetProductsProductPlanArgs struct {
	Id         pulumi.StringInput  `pulumi:"id"`
	MemoryGb   pulumi.IntInput     `pulumi:"memoryGb"`
	MilliCpu   pulumi.IntInput     `pulumi:"milliCpu"`
	Price      pulumi.Float64Input `pulumi:"price"`
	ProductId  pulumi.StringInput  `pulumi:"productId"`
	RegionCode pulumi.StringInput  `pulumi:"regionCode"`
}

func (GetProductsProductPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProductPlan)(nil)).Elem()
}

func (i GetProductsProductPlanArgs) ToGetProductsProductPlanOutput() GetProductsProductPlanOutput {
	return i.ToGetProductsProductPlanOutputWithContext(context.Background())
}

func (i GetProductsProductPlanArgs) ToGetProductsProductPlanOutputWithContext(ctx context.Context) GetProductsProductPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductPlanOutput)
}

// GetProductsProductPlanArrayInput is an input type that accepts GetProductsProductPlanArray and GetProductsProductPlanArrayOutput values.
// You can construct a concrete instance of `GetProductsProductPlanArrayInput` via:
//
//	GetProductsProductPlanArray{ GetProductsProductPlanArgs{...} }
type GetProductsProductPlanArrayInput interface {
	pulumi.Input

	ToGetProductsProductPlanArrayOutput() GetProductsProductPlanArrayOutput
	ToGetProductsProductPlanArrayOutputWithContext(context.Context) GetProductsProductPlanArrayOutput
}

type GetProductsProductPlanArray []GetProductsProductPlanInput

func (GetProductsProductPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProductPlan)(nil)).Elem()
}

func (i GetProductsProductPlanArray) ToGetProductsProductPlanArrayOutput() GetProductsProductPlanArrayOutput {
	return i.ToGetProductsProductPlanArrayOutputWithContext(context.Background())
}

func (i GetProductsProductPlanArray) ToGetProductsProductPlanArrayOutputWithContext(ctx context.Context) GetProductsProductPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductPlanArrayOutput)
}

type GetProductsProductPlanOutput struct{ *pulumi.OutputState }

func (GetProductsProductPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProductPlan)(nil)).Elem()
}

func (o GetProductsProductPlanOutput) ToGetProductsProductPlanOutput() GetProductsProductPlanOutput {
	return o
}

func (o GetProductsProductPlanOutput) ToGetProductsProductPlanOutputWithContext(ctx context.Context) GetProductsProductPlanOutput {
	return o
}

func (o GetProductsProductPlanOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProductsProductPlanOutput) MemoryGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductsProductPlan) int { return v.MemoryGb }).(pulumi.IntOutput)
}

func (o GetProductsProductPlanOutput) MilliCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductsProductPlan) int { return v.MilliCpu }).(pulumi.IntOutput)
}

func (o GetProductsProductPlanOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v GetProductsProductPlan) float64 { return v.Price }).(pulumi.Float64Output)
}

func (o GetProductsProductPlanOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.ProductId }).(pulumi.StringOutput)
}

func (o GetProductsProductPlanOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.RegionCode }).(pulumi.StringOutput)
}

type GetProductsProductPlanArrayOutput struct{ *pulumi.OutputState }

func (GetProductsProductPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProductPlan)(nil)).Elem()
}

func (o GetProductsProductPlanArrayOutput) ToGetProductsProductPlanArrayOutput() GetProductsProductPlanArrayOutput {
	return o
}

func (o GetProductsProductPlanArrayOutput) ToGetProductsProductPlanArrayOutputWithContext(ctx context.Context) GetProductsProductPlanArrayOutput {
	return o
}

func (o GetProductsProductPlanArrayOutput) Index(i pulumi.IntInput) GetProductsProductPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductsProductPlan {
		return vs[0].([]GetProductsProductPlan)[vs[1].(int)]
	}).(GetProductsProductPlanOutput)
}

type GetServiceResource struct {
	Id   string                 `pulumi:"id"`
	Spec GetServiceResourceSpec `pulumi:"spec"`
}

// GetServiceResourceInput is an input type that accepts GetServiceResourceArgs and GetServiceResourceOutput values.
// You can construct a concrete instance of `GetServiceResourceInput` via:
//
//	GetServiceResourceArgs{...}
type GetServiceResourceInput interface {
	pulumi.Input

	ToGetServiceResourceOutput() GetServiceResourceOutput
	ToGetServiceResourceOutputWithContext(context.Context) GetServiceResourceOutput
}

type GetServiceResourceArgs struct {
	Id   pulumi.StringInput          `pulumi:"id"`
	Spec GetServiceResourceSpecInput `pulumi:"spec"`
}

func (GetServiceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResource)(nil)).Elem()
}

func (i GetServiceResourceArgs) ToGetServiceResourceOutput() GetServiceResourceOutput {
	return i.ToGetServiceResourceOutputWithContext(context.Background())
}

func (i GetServiceResourceArgs) ToGetServiceResourceOutputWithContext(ctx context.Context) GetServiceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceResourceOutput)
}

// GetServiceResourceArrayInput is an input type that accepts GetServiceResourceArray and GetServiceResourceArrayOutput values.
// You can construct a concrete instance of `GetServiceResourceArrayInput` via:
//
//	GetServiceResourceArray{ GetServiceResourceArgs{...} }
type GetServiceResourceArrayInput interface {
	pulumi.Input

	ToGetServiceResourceArrayOutput() GetServiceResourceArrayOutput
	ToGetServiceResourceArrayOutputWithContext(context.Context) GetServiceResourceArrayOutput
}

type GetServiceResourceArray []GetServiceResourceInput

func (GetServiceResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceResource)(nil)).Elem()
}

func (i GetServiceResourceArray) ToGetServiceResourceArrayOutput() GetServiceResourceArrayOutput {
	return i.ToGetServiceResourceArrayOutputWithContext(context.Background())
}

func (i GetServiceResourceArray) ToGetServiceResourceArrayOutputWithContext(ctx context.Context) GetServiceResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceResourceArrayOutput)
}

type GetServiceResourceOutput struct{ *pulumi.OutputState }

func (GetServiceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResource)(nil)).Elem()
}

func (o GetServiceResourceOutput) ToGetServiceResourceOutput() GetServiceResourceOutput {
	return o
}

func (o GetServiceResourceOutput) ToGetServiceResourceOutputWithContext(ctx context.Context) GetServiceResourceOutput {
	return o
}

func (o GetServiceResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResource) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceResourceOutput) Spec() GetServiceResourceSpecOutput {
	return o.ApplyT(func(v GetServiceResource) GetServiceResourceSpec { return v.Spec }).(GetServiceResourceSpecOutput)
}

type GetServiceResourceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceResource)(nil)).Elem()
}

func (o GetServiceResourceArrayOutput) ToGetServiceResourceArrayOutput() GetServiceResourceArrayOutput {
	return o
}

func (o GetServiceResourceArrayOutput) ToGetServiceResourceArrayOutputWithContext(ctx context.Context) GetServiceResourceArrayOutput {
	return o
}

func (o GetServiceResourceArrayOutput) Index(i pulumi.IntInput) GetServiceResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceResource {
		return vs[0].([]GetServiceResource)[vs[1].(int)]
	}).(GetServiceResourceOutput)
}

type GetServiceResourceSpec struct {
	// EnableHAReplica defines if a replica will be provisioned for this service.
	EnableHaReplica bool `pulumi:"enableHaReplica"`
	// MemoryGB is the memory allocated for this service.
	MemoryGb int `pulumi:"memoryGb"`
	// MilliCPU is the cpu allocated for this service.
	MilliCpu int `pulumi:"milliCpu"`
}

// GetServiceResourceSpecInput is an input type that accepts GetServiceResourceSpecArgs and GetServiceResourceSpecOutput values.
// You can construct a concrete instance of `GetServiceResourceSpecInput` via:
//
//	GetServiceResourceSpecArgs{...}
type GetServiceResourceSpecInput interface {
	pulumi.Input

	ToGetServiceResourceSpecOutput() GetServiceResourceSpecOutput
	ToGetServiceResourceSpecOutputWithContext(context.Context) GetServiceResourceSpecOutput
}

type GetServiceResourceSpecArgs struct {
	// EnableHAReplica defines if a replica will be provisioned for this service.
	EnableHaReplica pulumi.BoolInput `pulumi:"enableHaReplica"`
	// MemoryGB is the memory allocated for this service.
	MemoryGb pulumi.IntInput `pulumi:"memoryGb"`
	// MilliCPU is the cpu allocated for this service.
	MilliCpu pulumi.IntInput `pulumi:"milliCpu"`
}

func (GetServiceResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResourceSpec)(nil)).Elem()
}

func (i GetServiceResourceSpecArgs) ToGetServiceResourceSpecOutput() GetServiceResourceSpecOutput {
	return i.ToGetServiceResourceSpecOutputWithContext(context.Background())
}

func (i GetServiceResourceSpecArgs) ToGetServiceResourceSpecOutputWithContext(ctx context.Context) GetServiceResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceResourceSpecOutput)
}

type GetServiceResourceSpecOutput struct{ *pulumi.OutputState }

func (GetServiceResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResourceSpec)(nil)).Elem()
}

func (o GetServiceResourceSpecOutput) ToGetServiceResourceSpecOutput() GetServiceResourceSpecOutput {
	return o
}

func (o GetServiceResourceSpecOutput) ToGetServiceResourceSpecOutputWithContext(ctx context.Context) GetServiceResourceSpecOutput {
	return o
}

// EnableHAReplica defines if a replica will be provisioned for this service.
func (o GetServiceResourceSpecOutput) EnableHaReplica() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceResourceSpec) bool { return v.EnableHaReplica }).(pulumi.BoolOutput)
}

// MemoryGB is the memory allocated for this service.
func (o GetServiceResourceSpecOutput) MemoryGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceResourceSpec) int { return v.MemoryGb }).(pulumi.IntOutput)
}

// MilliCPU is the cpu allocated for this service.
func (o GetServiceResourceSpecOutput) MilliCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceResourceSpec) int { return v.MilliCpu }).(pulumi.IntOutput)
}

type GetServiceSpec struct {
	// Hostname is the hostname of this service.
	Hostname string `pulumi:"hostname"`
	// Hostname of the pooler of this service.
	PoolerHostname string `pulumi:"poolerHostname"`
	// Port of the pooler of this service.
	PoolerPort int `pulumi:"poolerPort"`
	// Port is the port assigned to this service.
	Port int `pulumi:"port"`
	// Hostname of the HA-Replica of this service.
	ReplicaHostname string `pulumi:"replicaHostname"`
	// Port of the HA-Replica of this service.
	ReplicaPort int `pulumi:"replicaPort"`
	// Username is the Postgres username.
	Username string `pulumi:"username"`
}

// GetServiceSpecInput is an input type that accepts GetServiceSpecArgs and GetServiceSpecOutput values.
// You can construct a concrete instance of `GetServiceSpecInput` via:
//
//	GetServiceSpecArgs{...}
type GetServiceSpecInput interface {
	pulumi.Input

	ToGetServiceSpecOutput() GetServiceSpecOutput
	ToGetServiceSpecOutputWithContext(context.Context) GetServiceSpecOutput
}

type GetServiceSpecArgs struct {
	// Hostname is the hostname of this service.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// Hostname of the pooler of this service.
	PoolerHostname pulumi.StringInput `pulumi:"poolerHostname"`
	// Port of the pooler of this service.
	PoolerPort pulumi.IntInput `pulumi:"poolerPort"`
	// Port is the port assigned to this service.
	Port pulumi.IntInput `pulumi:"port"`
	// Hostname of the HA-Replica of this service.
	ReplicaHostname pulumi.StringInput `pulumi:"replicaHostname"`
	// Port of the HA-Replica of this service.
	ReplicaPort pulumi.IntInput `pulumi:"replicaPort"`
	// Username is the Postgres username.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSpec)(nil)).Elem()
}

func (i GetServiceSpecArgs) ToGetServiceSpecOutput() GetServiceSpecOutput {
	return i.ToGetServiceSpecOutputWithContext(context.Background())
}

func (i GetServiceSpecArgs) ToGetServiceSpecOutputWithContext(ctx context.Context) GetServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceSpecOutput)
}

type GetServiceSpecOutput struct{ *pulumi.OutputState }

func (GetServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSpec)(nil)).Elem()
}

func (o GetServiceSpecOutput) ToGetServiceSpecOutput() GetServiceSpecOutput {
	return o
}

func (o GetServiceSpecOutput) ToGetServiceSpecOutputWithContext(ctx context.Context) GetServiceSpecOutput {
	return o
}

// Hostname is the hostname of this service.
func (o GetServiceSpecOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSpec) string { return v.Hostname }).(pulumi.StringOutput)
}

// Hostname of the pooler of this service.
func (o GetServiceSpecOutput) PoolerHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSpec) string { return v.PoolerHostname }).(pulumi.StringOutput)
}

// Port of the pooler of this service.
func (o GetServiceSpecOutput) PoolerPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceSpec) int { return v.PoolerPort }).(pulumi.IntOutput)
}

// Port is the port assigned to this service.
func (o GetServiceSpecOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceSpec) int { return v.Port }).(pulumi.IntOutput)
}

// Hostname of the HA-Replica of this service.
func (o GetServiceSpecOutput) ReplicaHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSpec) string { return v.ReplicaHostname }).(pulumi.StringOutput)
}

// Port of the HA-Replica of this service.
func (o GetServiceSpecOutput) ReplicaPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceSpec) int { return v.ReplicaPort }).(pulumi.IntOutput)
}

// Username is the Postgres username.
func (o GetServiceSpecOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSpec) string { return v.Username }).(pulumi.StringOutput)
}

type GetVpcsVpc struct {
	Cidr               string                        `pulumi:"cidr"`
	Created            string                        `pulumi:"created"`
	ErrorMessage       string                        `pulumi:"errorMessage"`
	Id                 int                           `pulumi:"id"`
	Name               string                        `pulumi:"name"`
	PeeringConnections []GetVpcsVpcPeeringConnection `pulumi:"peeringConnections"`
	ProjectId          string                        `pulumi:"projectId"`
	ProvisionedId      string                        `pulumi:"provisionedId"`
	RegionCode         string                        `pulumi:"regionCode"`
	Status             string                        `pulumi:"status"`
	Updated            string                        `pulumi:"updated"`
}

// GetVpcsVpcInput is an input type that accepts GetVpcsVpcArgs and GetVpcsVpcOutput values.
// You can construct a concrete instance of `GetVpcsVpcInput` via:
//
//	GetVpcsVpcArgs{...}
type GetVpcsVpcInput interface {
	pulumi.Input

	ToGetVpcsVpcOutput() GetVpcsVpcOutput
	ToGetVpcsVpcOutputWithContext(context.Context) GetVpcsVpcOutput
}

type GetVpcsVpcArgs struct {
	Cidr               pulumi.StringInput                    `pulumi:"cidr"`
	Created            pulumi.StringInput                    `pulumi:"created"`
	ErrorMessage       pulumi.StringInput                    `pulumi:"errorMessage"`
	Id                 pulumi.IntInput                       `pulumi:"id"`
	Name               pulumi.StringInput                    `pulumi:"name"`
	PeeringConnections GetVpcsVpcPeeringConnectionArrayInput `pulumi:"peeringConnections"`
	ProjectId          pulumi.StringInput                    `pulumi:"projectId"`
	ProvisionedId      pulumi.StringInput                    `pulumi:"provisionedId"`
	RegionCode         pulumi.StringInput                    `pulumi:"regionCode"`
	Status             pulumi.StringInput                    `pulumi:"status"`
	Updated            pulumi.StringInput                    `pulumi:"updated"`
}

func (GetVpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return i.ToGetVpcsVpcOutputWithContext(context.Background())
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcOutput)
}

// GetVpcsVpcArrayInput is an input type that accepts GetVpcsVpcArray and GetVpcsVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcArrayInput` via:
//
//	GetVpcsVpcArray{ GetVpcsVpcArgs{...} }
type GetVpcsVpcArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput
	ToGetVpcsVpcArrayOutputWithContext(context.Context) GetVpcsVpcArrayOutput
}

type GetVpcsVpcArray []GetVpcsVpcInput

func (GetVpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return i.ToGetVpcsVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcArrayOutput)
}

type GetVpcsVpcOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Cidr }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcsVpc) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetVpcsVpcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) PeeringConnections() GetVpcsVpcPeeringConnectionArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []GetVpcsVpcPeeringConnection { return v.PeeringConnections }).(GetVpcsVpcPeeringConnectionArrayOutput)
}

func (o GetVpcsVpcOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) ProvisionedId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.ProvisionedId }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.RegionCode }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVpcsVpcOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Updated }).(pulumi.StringOutput)
}

type GetVpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpc {
		return vs[0].([]GetVpcsVpc)[vs[1].(int)]
	}).(GetVpcsVpcOutput)
}

type GetVpcsVpcPeeringConnection struct {
	ErrorMessage   string `pulumi:"errorMessage"`
	PeerAccountId  string `pulumi:"peerAccountId"`
	PeerCidr       string `pulumi:"peerCidr"`
	PeerRegionCode string `pulumi:"peerRegionCode"`
	PeerVpcId      string `pulumi:"peerVpcId"`
	ProvisionedId  string `pulumi:"provisionedId"`
	Status         string `pulumi:"status"`
	VpcId          string `pulumi:"vpcId"`
}

// GetVpcsVpcPeeringConnectionInput is an input type that accepts GetVpcsVpcPeeringConnectionArgs and GetVpcsVpcPeeringConnectionOutput values.
// You can construct a concrete instance of `GetVpcsVpcPeeringConnectionInput` via:
//
//	GetVpcsVpcPeeringConnectionArgs{...}
type GetVpcsVpcPeeringConnectionInput interface {
	pulumi.Input

	ToGetVpcsVpcPeeringConnectionOutput() GetVpcsVpcPeeringConnectionOutput
	ToGetVpcsVpcPeeringConnectionOutputWithContext(context.Context) GetVpcsVpcPeeringConnectionOutput
}

type GetVpcsVpcPeeringConnectionArgs struct {
	ErrorMessage   pulumi.StringInput `pulumi:"errorMessage"`
	PeerAccountId  pulumi.StringInput `pulumi:"peerAccountId"`
	PeerCidr       pulumi.StringInput `pulumi:"peerCidr"`
	PeerRegionCode pulumi.StringInput `pulumi:"peerRegionCode"`
	PeerVpcId      pulumi.StringInput `pulumi:"peerVpcId"`
	ProvisionedId  pulumi.StringInput `pulumi:"provisionedId"`
	Status         pulumi.StringInput `pulumi:"status"`
	VpcId          pulumi.StringInput `pulumi:"vpcId"`
}

func (GetVpcsVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpcPeeringConnection)(nil)).Elem()
}

func (i GetVpcsVpcPeeringConnectionArgs) ToGetVpcsVpcPeeringConnectionOutput() GetVpcsVpcPeeringConnectionOutput {
	return i.ToGetVpcsVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i GetVpcsVpcPeeringConnectionArgs) ToGetVpcsVpcPeeringConnectionOutputWithContext(ctx context.Context) GetVpcsVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcPeeringConnectionOutput)
}

// GetVpcsVpcPeeringConnectionArrayInput is an input type that accepts GetVpcsVpcPeeringConnectionArray and GetVpcsVpcPeeringConnectionArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcPeeringConnectionArrayInput` via:
//
//	GetVpcsVpcPeeringConnectionArray{ GetVpcsVpcPeeringConnectionArgs{...} }
type GetVpcsVpcPeeringConnectionArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcPeeringConnectionArrayOutput() GetVpcsVpcPeeringConnectionArrayOutput
	ToGetVpcsVpcPeeringConnectionArrayOutputWithContext(context.Context) GetVpcsVpcPeeringConnectionArrayOutput
}

type GetVpcsVpcPeeringConnectionArray []GetVpcsVpcPeeringConnectionInput

func (GetVpcsVpcPeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpcPeeringConnection)(nil)).Elem()
}

func (i GetVpcsVpcPeeringConnectionArray) ToGetVpcsVpcPeeringConnectionArrayOutput() GetVpcsVpcPeeringConnectionArrayOutput {
	return i.ToGetVpcsVpcPeeringConnectionArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcPeeringConnectionArray) ToGetVpcsVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) GetVpcsVpcPeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcPeeringConnectionArrayOutput)
}

type GetVpcsVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpcPeeringConnection)(nil)).Elem()
}

func (o GetVpcsVpcPeeringConnectionOutput) ToGetVpcsVpcPeeringConnectionOutput() GetVpcsVpcPeeringConnectionOutput {
	return o
}

func (o GetVpcsVpcPeeringConnectionOutput) ToGetVpcsVpcPeeringConnectionOutputWithContext(ctx context.Context) GetVpcsVpcPeeringConnectionOutput {
	return o
}

func (o GetVpcsVpcPeeringConnectionOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) PeerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.PeerAccountId }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) PeerCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.PeerCidr }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) PeerRegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.PeerRegionCode }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) PeerVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.PeerVpcId }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) ProvisionedId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.ProvisionedId }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVpcsVpcPeeringConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcPeeringConnection) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetVpcsVpcPeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcPeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpcPeeringConnection)(nil)).Elem()
}

func (o GetVpcsVpcPeeringConnectionArrayOutput) ToGetVpcsVpcPeeringConnectionArrayOutput() GetVpcsVpcPeeringConnectionArrayOutput {
	return o
}

func (o GetVpcsVpcPeeringConnectionArrayOutput) ToGetVpcsVpcPeeringConnectionArrayOutputWithContext(ctx context.Context) GetVpcsVpcPeeringConnectionArrayOutput {
	return o
}

func (o GetVpcsVpcPeeringConnectionArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcPeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpcPeeringConnection {
		return vs[0].([]GetVpcsVpcPeeringConnection)[vs[1].(int)]
	}).(GetVpcsVpcPeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTimeoutsInput)(nil)).Elem(), ServiceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTimeoutsPtrInput)(nil)).Elem(), ServiceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsTimeoutsInput)(nil)).Elem(), VpcsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsTimeoutsPtrInput)(nil)).Elem(), VpcsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductInput)(nil)).Elem(), GetProductsProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductArrayInput)(nil)).Elem(), GetProductsProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductPlanInput)(nil)).Elem(), GetProductsProductPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductPlanArrayInput)(nil)).Elem(), GetProductsProductPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceResourceInput)(nil)).Elem(), GetServiceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceResourceArrayInput)(nil)).Elem(), GetServiceResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceResourceSpecInput)(nil)).Elem(), GetServiceResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceSpecInput)(nil)).Elem(), GetServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcInput)(nil)).Elem(), GetVpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcArrayInput)(nil)).Elem(), GetVpcsVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcPeeringConnectionInput)(nil)).Elem(), GetVpcsVpcPeeringConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcPeeringConnectionArrayInput)(nil)).Elem(), GetVpcsVpcPeeringConnectionArray{})
	pulumi.RegisterOutputType(ServiceTimeoutsOutput{})
	pulumi.RegisterOutputType(ServiceTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(VpcsTimeoutsOutput{})
	pulumi.RegisterOutputType(VpcsTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetProductsProductOutput{})
	pulumi.RegisterOutputType(GetProductsProductArrayOutput{})
	pulumi.RegisterOutputType(GetProductsProductPlanOutput{})
	pulumi.RegisterOutputType(GetProductsProductPlanArrayOutput{})
	pulumi.RegisterOutputType(GetServiceResourceOutput{})
	pulumi.RegisterOutputType(GetServiceResourceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceResourceSpecOutput{})
	pulumi.RegisterOutputType(GetServiceSpecOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcPeeringConnectionArrayOutput{})
}
