// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Timescale
{
    public static class GetService
    {
        /// <summary>
        /// Service data source
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("timescale:index/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Service data source
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceResult>("timescale:index/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Environment tag for this service.
        /// </summary>
        [Input("environmentTag")]
        public string? EnvironmentTag { get; set; }

        /// <summary>
        /// Service ID is the unique identifier for this service
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// VPC ID this service is linked to.
        /// </summary>
        [Input("vpcId")]
        public int? VpcId { get; set; }

        public GetServiceArgs()
        {
        }
        public static new GetServiceArgs Empty => new GetServiceArgs();
    }

    public sealed class GetServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Environment tag for this service.
        /// </summary>
        [Input("environmentTag")]
        public Input<string>? EnvironmentTag { get; set; }

        /// <summary>
        /// Service ID is the unique identifier for this service
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// VPC ID this service is linked to.
        /// </summary>
        [Input("vpcId")]
        public Input<int>? VpcId { get; set; }

        public GetServiceInvokeArgs()
        {
        }
        public static new GetServiceInvokeArgs Empty => new GetServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        /// <summary>
        /// Created is the time this service was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Environment tag for this service.
        /// </summary>
        public readonly string EnvironmentTag;
        /// <summary>
        /// Service ID is the unique identifier for this service
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service Name is the configurable name assigned to this resource. If none is provided, a default will be generated by the provider.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Region Code is the physical data center where this service is located.
        /// </summary>
        public readonly string RegionCode;
        public readonly ImmutableArray<Outputs.GetServiceResourceResult> Resources;
        public readonly Outputs.GetServiceSpecResult Spec;
        /// <summary>
        /// VPC ID this service is linked to.
        /// </summary>
        public readonly int VpcId;

        [OutputConstructor]
        private GetServiceResult(
            string created,

            string environmentTag,

            string id,

            string name,

            string regionCode,

            ImmutableArray<Outputs.GetServiceResourceResult> resources,

            Outputs.GetServiceSpecResult spec,

            int vpcId)
        {
            Created = created;
            EnvironmentTag = environmentTag;
            Id = id;
            Name = name;
            RegionCode = regionCode;
            Resources = resources;
            Spec = spec;
            VpcId = vpcId;
        }
    }
}
